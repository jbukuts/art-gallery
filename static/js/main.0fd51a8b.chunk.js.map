{"version":3,"sources":["GoodLook.js","App.js","index.js"],"names":["GoodLook","$","fadeTo","fileName","this","props","focusImage","title","replaceAll","toLowerCase","d","Date","timeString","getHours","getMinutes","dateString","getMonth","getDate","getFullYear","triangle","r","height","width","viewBox","points","className","transform","sep","style","paddingRight","paddingLeft","color","imageData","sections","name","properties","artist","date","classification","dimensions","comments","id","onClick","handleRemove","defaultPosition","x","y","cancel","textAlign","fontSize","paddingTop","margin","position","display","marginTop","backgroundColor","marginLeft","border","src","file_name","alt","marginBottom","window","innerWidth","borderCollapse","top","wordWrap","fontWeight","map","areThere","reduce","acc","cur","verticalAlign","innerProp","length","dangerouslySetInnerHTML","__html","createSections","React","Component","CreateImageCollage","thing","isLocal","a","getLocalArtList","getRandomArtList","imageList","i","createSingleImage","href","target","rel","onMouseEnter","showWorkInfo","onMouseLeave","removeWorkInfo","e","showGoodLook","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffleArray","JSON","parse","stringify","art","current","find","item","concat","process","fetch","then","json","total","works","objectIDs","artistDisplayName","objectDate","primaryImage","medium","substring","push","document","querySelectorAll","filter","parentNode","forEach","children","App","state","imageFocus","removeGoodLook","bind","downHandler","flipImages","setState","addEventListener","removeEventListener","wantedImage","console","log","newState","photos","css","prop","loading","fadeIn","delay","index","findIndex","newIndex","key","TITLE","ReactDOM","render","StrictMode","Helmet","getElementById"],"mappings":"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","file":"static/js/main.0fd51a8b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './InDepth.css';\nimport $ from 'jquery';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport Draggable from 'react-draggable';\n\nclass GoodLook extends React.Component {\n  \n    // on mount fade the components in\n    componentDidMount() {\n      $(\"#backdrop\").fadeTo('250ms', 1);\n      $(\".in-depth\").fadeTo('250ms', 1);\n      $(\".info\").fadeTo('250ms', 1);\n    }\n  \n    // show the detailed view\n    render() {\n  \n      // stuff to display\n      let fileName = `${this.props.focusImage.title.replaceAll(' ', '_').toLowerCase()}.jpg`;\n      let d = new Date();\n      let months = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Novemver', 'December'];\n      let timeString = d.getHours() > 12 ? `${d.getHours()-12}:${d.getMinutes()} PM` : `${d.getHours()}:${d.getMinutes()} AM`;\n      let dateString = `Modified: ${months[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()} at ${timeString}`;\n  \n      // triangle icon\n      let triangle = (r) => {return (<svg height=\"10\" width=\"10\" viewBox=\"0 0 10 10\">\n        <polygon points=\".2 .2,9.8 .2,4.8 9.8\" className={\"triangle-icon\"} transform={`rotate(${r ? 270 : 0},5,5)`}/>\n      </svg>)};\n  \n      // seperator between sections\n      let sep = <hr style={{paddingRight: '-3px', paddingLeft: '-3px', color: '#9f9f9f'}}></hr>;\n  \n      // creates the header\n      let header = (r, title) => <span>\n        <span>{triangle(r)}</span>\n        <span style={{display: 'inline-block', verticalAlign: 'middle'}}>&nbsp;&nbsp;{title}:</span>\n      </span>\n  \n      // image data\n      const imageData = this.props.focusImage;\n  \n      // sections to creates\n      let sections = [\n        {\n          name : \"General\", \n          properties: [[\"Name\",imageData.title],[\"Creator\", imageData.artist],[\"Date\", imageData.date]]\n        },\n        {\n          name : \"More Info\", \n          properties: [[\"Medium\",imageData.classification],[\"Dimensions\", imageData.dimensions]]\n        },\n        {\n          name : \"Name & Extension\"\n        },\n        {\n          name : \"Comments\", \n          properties: [[\"\",imageData.comments]]\n        },\n        {\n          name : \"Open with\"\n        },\n        {\n          name : \"Preview\"\n        },\n        {\n          name : \"Sharing & Permissions\"\n        }\n      ]\n  \n      // add properties to section as needed\n      let addProperties = (properties) => {\n        return properties.map(x => {\n          const pStyle = {marginBottom: '2px', marginTop: '2px', marginLeft: \"30px\"};\n          const innerProp = `${(x[0].length > 0) ? `${x[0]}: ` : ''}  ${x[1]}`;\n          return ( x[1] &&\n            <p style={pStyle} dangerouslySetInnerHTML={{__html: innerProp}}></p>\n          )\n        });\n      }\n  \n      // create the sections from the array\n      let createSections = (sections) => {\n        return sections.map(x => {\n\n          const areThere = x.properties ? x.properties.reduce((acc, cur) => { return acc ? acc : (cur[1] ? true : false)}, false) : false;\n\n          return ( \n            <div>\n              {sep}\n              {header(!areThere, x.name)}\n              {areThere && addProperties(x.properties)}\n            </div>\n          )\n        });\n      }\n\n      return (\n        <div>\n          {/* This will blur the background */}\n          <div id=\"backdrop\" onClick={this.props.handleRemove}></div>\n  \n          {/* The actual full view of the image */}\n          <Draggable defaultPosition={{x: 100, y: 50}} cancel=\".react-transform-component\">\n            <div className={\"in-depth\"}>     \n              <div className={\"banner-mid\"}   style={{height: '25px', width: '100%', textAlign: 'center', fontSize: '10px'}}>\n                <p style={{paddingTop: '8px', margin: '0px'}}>{fileName}</p>\n  \n                <div style={{position: 'relative', display: 'flex', marginTop: '-16px'}}>\n                  <div className={'top-button'} style={{backgroundColor: '#FC5753', marginLeft: '5px', border: '1px solid #E03e3b'}}></div>\n                  <div className={'top-button'} style={{backgroundColor: '#FDBC40', border: '1px solid #dd9b23'}}></div>\n                  <div className={'top-button'} style={{backgroundColor: '#33C748', border: '1px solid #24a733'}}></div>\n                </div>\n              </div>\n  \n              {/* allow for zoom on the image */}\n              <TransformWrapper>\n                <TransformComponent>\n                  <img src={this.props.focusImage.file_name} alt=\"\" style={{marginBottom: '-6px'}}/>\n                </TransformComponent>\n              </TransformWrapper>\n            </div>\n          </Draggable>\n  \n          {/* the info window on the image */}\n          <Draggable defaultPosition={{x: window.innerWidth-500, y: 500}}>\n            <div className={'info'} style={{borderCollapse: 'separate'}}>\n              <div className={\"banner-mid\"}   style={{height: '25px', width: '100%', textAlign: 'center', fontSize: '10px', position: 'relative'}}>\n                <div className={\"icon\"} style={{margin: '0px', position: 'absolute', top: '50%', transform: 'translateY(-50%)'}}></div>\n                <div>Image Info</div>\n              </div>\n            \n              <div style={{paddingRight: '7px', paddingLeft: '7px', marginTop: '10px', fontSize: '11px', wordWrap: 'break-word'}}>\n                {/* header of the window*/}\n                <p style={{fontSize: '14px', fontWeight: 'bold', marginBottom: '5px'}}>{fileName}</p>\n                <p style={{marginTop: '0px'}}>{dateString}</p>\n                \n                {createSections(sections)}\n              </div>\n            </div>\n          </Draggable>\n        </div> \n      )\n    }\n  }\n\n  export default GoodLook;","import React from 'react';\nimport './App.css';\nimport art from './art.json';\nimport $ from 'jquery';\nimport GoodLook from './GoodLook.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageList: null,\n      imageFocus: null,\n      showGoodLook: false,\n      isLocal: true\n    };\n\n    // bind some handlers\n    this.removeGoodLook = this.removeGoodLook.bind(this);\n    this.downHandler = this.downHandler.bind(this)\n    this.flipImages = this.flipImages.bind(this)\n  }\n\n  async componentDidMount() {\n    // key listener\n    await this.setState({\n      imageList: await CreateImageCollage(this, this.state.isLocal)\n    });\n\n    window.addEventListener('keydown', this.downHandler);\n  }\n\n  // on pade unmount\n  componentWillUnmount() {\n    // remove key listener\n    window.removeEventListener('keydown', this.downHandler);\n  }\n  \n  // in order to show the good look\n  async showGoodLook(e, wantedImage) {\n    // simply change state\n    // good look is conditional rendered\n    console.log(wantedImage);\n    await this.setState({ \n      imageFocus: wantedImage,\n      showGoodLook: true\n    });\n  }\n\n  // remove the good look\n  async removeGoodLook() {\n    // fade out and set state to false to unmount\n    $(\".in-depth\").fadeTo('250ms', 0);\n    $(\".info\").fadeTo('250ms', 0);\n    $(\"#backdrop\").fadeTo('250ms', 0, () => {\n      this.setState({showGoodLook: false})\n    });\n  }\n\n  // pull images from MET or local\n  async flipImages(newState) {\n    const photos = $('#photos');\n    $('body').css('overflow', 'hidden').css('pointer-events', 'none');\n    $('.swapButton').prop('disabled', true);\n\n    await photos.fadeTo('1s', 0, async () => {\n      const loading = $('#loading');\n      loading.css('display', 'block');\n      loading.fadeTo('.25s', 1);\n\n      this.setState({\n          imageList: await CreateImageCollage(this, newState),\n          isLocal: newState\n        }, \n        ()=> {\n          loading.fadeTo('.25s', 0, () => {loading.css('display', 'none')});\n          photos.fadeIn(\"slow\").delay(800).fadeTo('1s', 1, () => {\n            $('body').css('overflow', 'auto').css('pointer-events', 'all');\n            $('.swapButton').prop('disabled', false);\n          });\n        }\n      );\n    });\n  }\n\n  // handle keypresses\n  downHandler(e) {    \n    // if null ignore\n    if (this.state.imageFocus == null)\n      return;\n\n    // get current index of focued image\n    let index = this.state.imageList.findIndex((i) => i[1].title === this.state.imageFocus.title);\n\n    // figure out what key was pressed\n    // ensure \n    let newIndex = -1;\n    if (e.key === \"ArrowRight\")\n      newIndex = (index + 1 > this.state.imageList.length-1) ? 0 : index +1;\n    else if (e.key === \"ArrowLeft\")\n      newIndex = (index - 1 < 0) ? this.state.imageList.length-1 : index-1;\n    else\n      return;\n    \n    // change state of current image based on keypress\n    this.setState({\n      imageFocus: this.state.imageList[newIndex][1]\n    }) \n  }\n\n  render() {\n    return (\n      <div style={{width: '85%', margin: 'auto', position: 'relative'}} >\n        {/* if click on image show the detailed view */}\n        {this.state.showGoodLook && <GoodLook focusImage={this.state.imageFocus} handleRemove={this.removeGoodLook}/>}\n        \n        {/* Just a simple header */}\n        <h1 style={{fontSize: '40px', marginBottom: '5px'}}>The Gallery</h1>\n        <p style={{marginTop: '0px'}}>\n          This is just a collection of art I like.<br/>\n          Thought it'd be nice to see them all in one place.<br/>\n          I do not own any of them of course.\n        </p>\n\n        {/* buttons to pull from MET */}\n        <button className={'swapButton'} onClick={() => this.flipImages(!this.state.isLocal)}>{this.state.isLocal ? 'Random MET' : 'Back to Mine'}</button>\n        {!this.state.isLocal && <button className={'swapButton'} onClick={() => this.flipImages(this.state.isLocal)}>Get different from MET</button>}\n\n        <br/>\n        <br/>\n\n        {/* beach ball loading for the page */}\n        <div id=\"loading\">\n          <div>\n            <img src={`${process.env.PUBLIC_URL}/assets/spinning-ball.png`} alt=\"\"/>\n          </div>\n          <h2>Loading Photos</h2>\n        </div>\n        \n\n        {/* the actual image collage */}\n        <div id=\"photos\">\n          {this.state.imageList && this.state.imageList.map(x => x[0])}\n        </div>\n\n        {/* footer of the page */}\n        <div id=\"footer\">\n          { !this.state.isLocal && <div>\n            <img style={{width: '100px' , height: '100px'}} src={`${process.env.PUBLIC_URL}/assets/MetLogo.svg`} alt=\"Thank you to the MET\" height={'100'} width={'100'}/>\n          </div>}\n\n          <div>\n            <p style={{marginBottom: '0px', fontSize: '14px', width: '100%'}}>Jake Bukuts 2021</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n// create the image collage\nasync function CreateImageCollage(thing, isLocal) {\n  const imageList =  isLocal ? getLocalArtList() : await getRandomArtList();\n  return imageList.map(\n    (x,i) => {\n      return [createSingleImage(x,i,thing), x]\n    }\n  );\n}\n\n// creates a single image to display in list\nfunction createSingleImage(x,i, thing) {\n  return (\n    <div className={\"work\"} key={i}>\n        <div className={\"meta\"}>\n          <div className={\"icon\"}></div>\n          <div className={\"file-name\"}>\n            <a href={`https://www.google.com/search?q=${x.title} ${x.artist}`} target=\"_blank\" rel=\"noreferrer\">{x.title.replaceAll(' ', '_').toLowerCase()}.jpg</a>\n          </div>\n        </div>\n        \n        <div style={{display: 'flex'}}>\n          <div className={\"banner-left\"}  style={{height: '55px', width: '180px'}}></div>\n          <div className={\"banner-mid\"}   style={{height: '55px', width: 'calc(100% - 331px)'}}></div>\n          <div className={\"banner-right\"} style={{height: '55px', width: '151px'}}></div>\n        </div>\n        <img src={x.file_name} alt=\"\" onMouseEnter={showWorkInfo} onMouseLeave={removeWorkInfo} onClick={(e)=> thing.showGoodLook(e,x)}/>\n    </div>\n  )\n}\n\nfunction getLocalArtList() {\n  // only one work per artist\n  var clonedArray = JSON.parse(JSON.stringify(art))\n\n  return shuffleArray(clonedArray).reduce((acc, current) => {\n    const x = acc.find(item => item.artist === current.artist);\n      return !x ? acc.concat([current]) : acc;\n  }, []).map(x => {x.file_name = `${process.env.PUBLIC_URL}/assets/art/${x.file_name}`; return x});\n}\n\n\n// pull random image data from the MET \nasync function getRandomArtList() {\n  let url = 'https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=painting';\n  \n  return await fetch(url)\n    .then(r => r.json())\n    .then(async (r) => {\n      const total = r.total;\n      let works = [];\n\n      for (let i = 0; i < 15; ++i) {\n        let id = Math.floor(Math.random() * (total-1));\n        await fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${r.objectIDs[id]}`)\n          .then(r => r.json())\n          .then(r => {\n            r['date'] = (r.artistDisplayName) !== '' ? r.objectDate : 'Unknown';\n            r['file_name'] = r.primaryImage;\n            r['artist'] = (r.artistDisplayName) !== '' ? r.artistDisplayName : 'Unknown';\n            r['comments'] = (r.medium) !== '' ? r.medium : 'N/A';\n            r['title'] = r.title.length > 50 ? `${r.title.substring(0,50)}` : r.title;\n            works.push(r);\n        });\n      }\n\n      return works;\n    });\n}\n\n// grey out all except for one\nfunction showWorkInfo(e) {\n  let invert = [...document.querySelectorAll('.work')].filter(x => x !== e.target.parentNode);\n  invert.forEach(x => {\n    x.children[2].style.filter = 'grayscale(100%) blur(0px)';\n  })\n}\n\n// reset the colors of all images\nfunction removeWorkInfo(e) {\n  let invert = [...document.querySelectorAll('.work')].filter(x => x !== e.target.parentNode);\n  invert.forEach(x => {\n    x.children[2].style.filter = 'grayscale(0%) blur(0px)';\n  })\n}\n\n// helper to shuffle array\nfunction shuffleArray(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Helmet } from 'react-helmet'\n// import reportWebVitals from './reportWebVitals';\n\nconst TITLE = \"The Gallery\";\ndocument.title = TITLE;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Helmet>\n      <title>{ TITLE }</title>\n    </Helmet>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}