{"version":3,"sources":["GoodLook.js","GetArt.js","App.js","index.js"],"names":["GoodLook","$","fadeTo","tag","isInfo","front","css","fileName","this","props","focusImage","title","replaceAll","toLowerCase","d","Date","timeString","getHours","getMinutes","dateString","getMonth","getDate","getFullYear","triangle","r","height","width","viewBox","points","className","transform","sep","style","paddingRight","paddingLeft","color","imageData","sections","name","properties","artist","date","classification","dimensions","comments","id","onClick","handleRemove","cancel","onStart","handleDrag","bounds","textAlign","fontSize","paddingTop","margin","textOverflow","whiteSpace","overflow","position","display","marginTop","backgroundColor","marginLeft","border","onPanningStart","src","file_name","alt","marginBottom","borderCollapse","top","wordWrap","fontWeight","map","x","areThere","reduce","acc","cur","verticalAlign","innerProp","length","dangerouslySetInnerHTML","__html","createSections","React","Component","getRandomArtList","apiCalls","getListFromAIC","getListFromMET","Promise","all","then","v","console","log","curr","concat","promArr","Array","i","Math","floor","random","aicDump","workId","workURL","push","fetch","json","catch","e","forEach","status","data","image_id","filter","undefined","a","total","workPromises","createURL","objectId","objectIDs","vals","artistDisplayName","objectDate","primaryImage","medium","CreateImageCollage","thing","isLocal","getLocalArtList","shuffleArray","imageList","createSingleImage","href","target","rel","onMouseEnter","showWorkInfo","onMouseLeave","removeWorkInfo","showGoodLook","JSON","parse","stringify","art","current","find","item","process","document","querySelectorAll","parentNode","children","array","temporaryValue","randomIndex","currentIndex","App","state","imageFocus","removeGoodLook","bind","downHandler","flipImages","setState","window","addEventListener","removeEventListener","wantedImage","newState","photos","prop","loading","fadeIn","delay","index","findIndex","newIndex","key","type","TITLE","ReactDOM","render","StrictMode","Helmet","getElementById"],"mappings":"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","file":"static/js/main.94bf16e1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './InDepth.css';\nimport $ from 'jquery';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport Draggable from 'react-draggable';\n\nclass GoodLook extends React.Component {\n  \n    // on mount fade the components in\n    componentDidMount() {\n      $(\"#backdrop\").fadeTo('250ms', 1);\n      $(\".in-depth\").fadeTo('250ms', 1);\n      $(\".info\").fadeTo('250ms', 1);\n    }\n\n    handleDrag(tag) {\n      const isInfo = tag === '.in-depth' ? false : true;\n      const front = isInfo ? $('.info') : $('.in-depth');\n      const back = !isInfo ? $('.info') : $('.in-depth');\n\n      back.css('z-index', 100);\n      front.css('z-index', 101);\n    }\n  \n    // show the detailed view\n    render() {\n  \n      // stuff to display\n      let fileName = `${this.props.focusImage.title.replaceAll(' ', '_').toLowerCase()}.jpg`;\n      let d = new Date();\n      let months = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Novemver', 'December'];\n      let timeString = d.getHours() > 12 ? `${d.getHours()-12}:${d.getMinutes()} PM` : `${d.getHours()}:${d.getMinutes()} AM`;\n      let dateString = `Modified: ${months[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()} at ${timeString}`;\n  \n      // triangle icon\n      let triangle = (r) => {return (<svg height=\"10\" width=\"10\" viewBox=\"0 0 10 10\">\n        <polygon points=\".2 .2,9.8 .2,4.8 9.8\" className={\"triangle-icon\"} transform={`rotate(${r ? 270 : 0},5,5)`}/>\n      </svg>)};\n  \n      // seperator between sections\n      let sep = <hr style={{paddingRight: '-3px', paddingLeft: '-3px', color: '#9f9f9f'}}></hr>;\n  \n      // creates the header\n      let header = (r, title) => <span>\n        <span>{triangle(r)}</span>\n        <span style={{display: 'inline-block', verticalAlign: 'middle'}}>&nbsp;&nbsp;{title}:</span>\n      </span>\n  \n      // image data\n      const imageData = this.props.focusImage;\n  \n      // sections to creates\n      let sections = [\n        {\n          name : \"General\", \n          properties: [[\"Name\",imageData.title],[\"Creator\", imageData.artist],[\"Date\", imageData.date]]\n        },\n        {\n          name : \"More Info\", \n          properties: [[\"Medium\",imageData.classification],[\"Dimensions\", imageData.dimensions]]\n        },\n        {\n          name : \"Name & Extension\"\n        },\n        {\n          name : \"Comments\", \n          properties: [[\"\",imageData.comments]]\n        },\n        {\n          name : \"Open with\"\n        },\n        {\n          name : \"Preview\"\n        },\n        {\n          name : \"Sharing & Permissions\"\n        }\n      ]\n  \n      // add properties to section as needed\n      let addProperties = (properties) => {\n        return properties.map(x => {\n          const pStyle = {marginBottom: '2px', marginTop: '2px', marginLeft: \"30px\"};\n          const innerProp = `${(x[0].length > 0) ? `${x[0]}: ` : ''}  ${x[1]}`;\n          return ( x[1] &&\n            <p style={pStyle} dangerouslySetInnerHTML={{__html: innerProp}}></p>\n          )\n        });\n      }\n  \n      // create the sections from the array\n      let createSections = (sections) => {\n        return sections.map(x => {\n\n          const areThere = x.properties ? x.properties.reduce((acc, cur) => { return acc ? acc : (cur[1] ? true : false)}, false) : false;\n\n          return ( \n            <div>\n              {sep}\n              {header(!areThere, x.name)}\n              {areThere && addProperties(x.properties)}\n            </div>\n          )\n        });\n      }\n\n      return (\n        <div>\n          {/* This will blur the background */}\n          <div id=\"backdrop\" onClick={this.props.handleRemove}></div>\n  \n          {/* The actual full view of the image */}\n          <Draggable cancel=\".react-transform-component\" onStart={() => this.handleDrag('.in-depth')} bounds=\"body\">\n            <div className={\"in-depth\"}>     \n              <div className={\"banner-mid\"}   style={{height: '25px', width: '100%', textAlign: 'center', fontSize: '10px'}}>\n                <p style={{paddingTop: '8px', margin: 'auto', textOverflow: 'ellipsis', width: '40%', whiteSpace: 'nowrap', overflow: 'hidden', textAlign: 'center'}}>{fileName}</p>\n  \n                <div style={{position: 'relative', display: 'flex', marginTop: '-16px'}}>\n                  <div className={'top-button'} style={{backgroundColor: '#FC5753', marginLeft: '5px', border: '1px solid #E03e3b'}}></div>\n                  <div className={'top-button'} style={{backgroundColor: '#FDBC40', border: '1px solid #dd9b23'}}></div>\n                  <div className={'top-button'} style={{backgroundColor: '#33C748', border: '1px solid #24a733'}}></div>\n                </div>\n              </div>\n  \n              {/* allow for zoom on the image */}\n              <TransformWrapper onPanningStart={() => this.handleDrag('.in-depth')}>\n                <TransformComponent>\n                  <div>\n                    <img src={this.props.focusImage.file_name} alt=\"\" style={{marginBottom: '-6px'}}/>\n                  </div>\n                </TransformComponent>\n              </TransformWrapper>\n            </div>\n          </Draggable>\n  \n          {/* the info window on the image */}\n          <Draggable onStart={() => this.handleDrag('.info')} bounds=\"body\">\n            <div className={'info'} style={{borderCollapse: 'separate'}}>\n              <div className={\"banner-mid\"}   style={{height: '25px', width: '100%', textAlign: 'center', fontSize: '10px', position: 'relative'}}>\n                <div style={{marginTop: '0px', position: 'relative', top: '7px'}}>Image Info</div>\n              </div>\n            \n              <div style={{paddingRight: '7px', paddingLeft: '7px', marginTop: '10px', fontSize: '11px', wordWrap: 'break-word'}}>\n                {/* header of the window*/}\n                <p style={{fontSize: '14px', fontWeight: 'bold', marginBottom: '5px'}}>{fileName}</p>\n                <p style={{marginTop: '0px'}}>{dateString}</p>\n                \n                {createSections(sections)}\n              </div>\n            </div>\n          </Draggable>\n        </div> \n      )\n    }\n  }\n\n  export default GoodLook;","import aicDump from './allArtworks.json';\n\n// pull random image data from the MET \nexport function getRandomArtList() {\n\n    // make the api call\n    // these are promises\n    const apiCalls = [\n        getListFromAIC(),\n        getListFromMET()\n    ];\n\n    // resolve promises and return results\n    return Promise.all(apiCalls).then((v) => {\n        console.log(v);\n        return v.reduce((acc, curr) => { return acc.concat(curr)}, []);\n    });\n}\n\n\n// get list from the AIC archive\nfunction getListFromAIC() {\n    const workNumbers = 24;\n    let idArray = [...Array(workNumbers)];\n    \n    let promArr = idArray.reduce((acc, curr) => {\n        const i = Math.floor(Math.random() * (aicDump.length-1));\n        const workId = aicDump[i].id;\n        const workURL = `https://api.artic.edu/api/v1/artworks/${workId}`;\n\n        acc.push( fetch(workURL).then(r => r.json()).catch((e) => {console.log(e); return undefined}) );\n        return acc;\n    }, []);\n\n\n    return Promise.all(promArr).then((v) => {\n        v.forEach((r) => {\n            if (r.status && r.status === 404)\n                return undefined;\n\n            const getData = (data) => data ? data : 'Unknown';\n\n            console.log(r);\n            r.data['file_name'] = `https://www.artic.edu/iiif/2/${r.data.image_id}/full/843,/0/default.jpg`;\n            r.data['date'] = r.data['date_display'] ? r.data['date_display'] : 'Unknown';\n            r.data['artist'] = r.data['artist_title'] ? r.data['artist_title'] : 'Unknown';\n            r.data['classification'] = getData(r.data['medium_display']);\n        });\n\n        return v.map(x => x.data).filter(x => x !== undefined).filter(x => x.image_id !== null);\n    });\n}\n\n// get list from MET archice\nfunction getListFromMET() {\n\n    let url = 'https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=painting';\n\n    // first get all matching ids\n    return fetch(url)\n        .then(r => r.json())\n        .then(async (r) => {\n        const total = r.total;\n        const numberWorks = 20;\n        let workPromises = [...Array(numberWorks)];\n\n        // simple function to create art URL\n        let createURL = (objectId) => `https://collectionapi.metmuseum.org/public/collection/v1/objects/${objectId}`;\n\n        // create promises for each work\n        workPromises.forEach((v, i) => {\n            let id = Math.floor(Math.random() * (total-1));\n            workPromises[i] = fetch(createURL(r.objectIDs[id])).then(r => r.json());\n        });\n\n        console.log(workPromises);\n\n        // resolve all promises and return the list of works\n        return Promise.all(workPromises).then((vals) => {\n            vals.forEach((r) => {\n                // add relevant data\n                r['date'] = (r.artistDisplayName) !== '' ? r.objectDate : 'Unknown';\n                r['file_name'] = r.primaryImage;\n                r['artist'] = (r.artistDisplayName) !== '' ? r.artistDisplayName : 'Unknown';\n                r['comments'] = (r.medium) !== '' ? r.medium : 'N/A';\n            });\n\n            return vals;\n        });\n    });\n}","import React from 'react';\nimport './App.css';\nimport art from './art.json';\nimport $ from 'jquery';\nimport GoodLook from './GoodLook.js';\nimport'./GetArt.js';\nimport {getRandomArtList} from './GetArt.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageList: null,\n      imageFocus: null,\n      showGoodLook: false,\n      isLocal: true\n    };\n\n    // bind some handlers\n    this.removeGoodLook = this.removeGoodLook.bind(this);\n    this.downHandler = this.downHandler.bind(this)\n    this.flipImages = this.flipImages.bind(this)\n  }\n\n  async componentDidMount() {\n    // key listener\n    await this.setState({\n      imageList: await CreateImageCollage(this, this.state.isLocal)\n    });\n\n    window.addEventListener('keydown', this.downHandler);\n  }\n\n  // on pade unmount\n  componentWillUnmount() {\n    // remove key listener\n    window.removeEventListener('keydown', this.downHandler);\n  }\n  \n  // in order to show the good look\n  async showGoodLook(e, wantedImage) {\n    // simply change state\n    // good look is conditional rendered\n    console.log(wantedImage);\n    await this.setState({ \n      imageFocus: wantedImage,\n      showGoodLook: true\n    });\n  }\n\n  // remove the good look\n  async removeGoodLook() {\n    // fade out and set state to false to unmount\n    $(\".in-depth\").fadeTo('250ms', 0);\n    $(\".info\").fadeTo('250ms', 0);\n    $(\"#backdrop\").fadeTo('250ms', 0, () => {\n      this.setState({showGoodLook: false})\n    });\n  }\n\n  // pull images from MET or local\n  async flipImages(newState) {\n    const photos = $('#photos');\n    $('body').css('overflow', 'hidden').css('pointer-events', 'none');\n    $('.swapButton').prop('disabled', true);\n\n    await photos.fadeTo('1s', 0, async () => {\n      const loading = $('#loading');\n      loading.css('display', 'block');\n      loading.fadeTo('.25s', 1);\n\n      this.setState({\n          imageList: await CreateImageCollage(this, newState),\n          isLocal: newState\n        }, \n        ()=> {\n          loading.fadeTo('.25s', 0, () => {loading.css('display', 'none')});\n          photos.fadeIn(\"slow\").delay(800).fadeTo('1s', 1, () => {\n            $('body').css('overflow', 'auto').css('pointer-events', 'all');\n            $('.swapButton').prop('disabled', false);\n          });\n        }\n      );\n    });\n  }\n\n  // handle keypresses\n  downHandler(e) {    \n    // if null ignore\n    if (this.state.imageFocus == null)\n      return;\n\n    // get current index of focued image\n    let index = this.state.imageList.findIndex((i) => i[1] === this.state.imageFocus);\n\n    // figure out what key was pressed\n    // ensure \n    let newIndex = -1;\n    if (e.key === \"ArrowRight\")\n      newIndex = (index + 1 > this.state.imageList.length-1) ? 0 : index +1;\n    else if (e.key === \"ArrowLeft\")\n      newIndex = (index - 1 < 0) ? this.state.imageList.length-1 : index-1;\n    else\n      return;\n    \n    // change state of current image based on keypress\n    this.setState({\n      imageFocus: this.state.imageList[newIndex][1]\n    }) \n  }\n\n  render() {\n    return (\n      <div style={{width: '80%', margin: 'auto', position: 'relative'}} >\n        {/* if click on image show the detailed view */}\n        {this.state.showGoodLook && <GoodLook focusImage={this.state.imageFocus} handleRemove={this.removeGoodLook}/>}\n        \n        {/* Just a simple header */}\n        <span>\n          {/**<img src={`${process.env.PUBLIC_URL}/assets/folder.png`} style={{float: 'left', width: '65px'}}/>**/}\n          <h1 style={{fontSize: '40px', marginBottom: '5px', paddingTop: '10px'}}>The Gallery</h1>\n        </span>\n        \n        <p style={{marginTop: '0px'}}>\n          This is just a collection of art.<br/>\n          Thought it would be nice to see them in one place.<br/>\n          Random works are provided by The Art Institute of Chicago and The MET.<br/>\n          I do not own any of these of course.\n        </p>\n\n        {/* buttons to pull from MET */}\n        <button className={'swapButton'} onClick={() => this.flipImages(!this.state.isLocal)}>{this.state.isLocal ? 'Random Works' : 'My Choices'}</button>\n        {!this.state.isLocal && <button className={'swapButton'} onClick={() => this.flipImages(this.state.isLocal)}>Shuffle Random</button>}\n\n        <input type=\"text\"/>\n\n        <br/>\n        <br/>\n\n        {/* beach ball loading for the page */}\n        <div id=\"loading\">\n          <div>\n            <img src={`${process.env.PUBLIC_URL}/assets/spinning-ball.png`} alt=\"\"/>\n          </div>\n          {/** <h2>Loading Photos</h2> **/}\n        </div>\n        \n\n        {/* the actual image collage */}\n        <div id=\"photos\">\n          {this.state.imageList && this.state.imageList.map(x => x[0])}\n        </div>\n\n        {/* footer of the page */}\n        <div id=\"footer\">\n          { !this.state.isLocal && <div>\n            <img style={{width: '50px' , height: '50px'}} src={`${process.env.PUBLIC_URL}/assets/MetLogo.svg`} alt=\"Thank you to the MET\" height={'100'} width={'100'}/>\n          </div>}\n\n          <div>\n            <p style={{marginBottom: '0px', fontSize: '14px', width: '100%'}}><b>Created by Jake Bukuts 2021</b></p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n// create the image collage\nasync function CreateImageCollage(thing, isLocal) {\n  const imageList =  isLocal ? getLocalArtList() : shuffleArray(await getRandomArtList());\n  return imageList.map(\n    (x,i) => {\n      return [createSingleImage(x,i,thing), x]\n    }\n  );\n}\n\n// creates a single image to display in list\nfunction createSingleImage(x,i, thing) {\n  return (\n    <div className={\"work\"} key={i}>\n        <div className={\"meta\"}>\n          <div className={\"icon\"}></div>\n          <a className={\"file-name\"} href={`https://www.google.com/search?q=${x.title} ${x.artist}`} target=\"_blank\" rel=\"noreferrer\">{x.title.replaceAll(' ', '_').toLowerCase()}.jpg</a>\n        </div>\n        \n        <div style={{display: 'flex'}}>\n          <div className={\"banner-left\"}></div>\n          <div className={\"banner-mid\"}></div>\n          <div className={\"banner-right\"}></div>\n        </div>\n        <img src={x.file_name} alt=\"\" onMouseEnter={showWorkInfo} onMouseLeave={removeWorkInfo} onClick={(e)=> thing.showGoodLook(e,x)}/>\n    </div>\n  )\n}\n\nfunction getLocalArtList() {\n  // only one work per artist\n  var clonedArray = JSON.parse(JSON.stringify(art))\n\n  return shuffleArray(clonedArray).reduce((acc, current) => {\n    const x = acc.find(item => item.artist === current.artist);\n      return !x ? acc.concat([current]) : acc;\n  }, []).map(x => {x.file_name = `${process.env.PUBLIC_URL}/assets/art/${x.file_name}`; return x});\n}\n\n// grey out all except for one\nfunction showWorkInfo(e) {\n  let invert = [...document.querySelectorAll('.work')].filter(x => x !== e.target.parentNode);\n  invert.forEach(x => {\n    x.children[2].style.filter = 'grayscale(100%) blur(0px)';\n  })\n}\n\n// reset the colors of all images\nfunction removeWorkInfo(e) {\n  let invert = [...document.querySelectorAll('.work')].filter(x => x !== e.target.parentNode);\n  invert.forEach(x => {\n    x.children[2].style.filter = 'grayscale(0%) blur(0px)';\n  })\n}\n\n// helper to shuffle array\nfunction shuffleArray(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Helmet } from 'react-helmet'\n// import reportWebVitals from './reportWebVitals';\n\nconst TITLE = \"The Gallery\";\ndocument.title = TITLE;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Helmet>\n      <title>{ TITLE }</title>\n    </Helmet>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}